// /b_02_scss_list_dic.scss
/* b_02_scss_list_dic.css */

// ----------------------------
// color
$yellow : #fa0;
$blue: (#00f, #0af, #0df, #7af, #adf); // list
$psuedoCode: (
  "hover":#87f, 
  "focus":#4f3, 
  "active":#fda, 
  "selected":#dfd
  ); // dic(map)
// ----------------------------

#wrap {
  width: 100%; height: 100%; 
  background-color: lighten($yellow, 30%);
}

.list_area {
  width: 100%; height: auto;
  & > li {
      width: 100%;
      background-color: nth($blue,2);
      &:hover { background-color: map-get($psuedoCode,"hover");}
      &:focus { background-color: map-get($psuedoCode,"focus");}
  }// li
}// .list_area


$coffee: ("esspress","latte","choco","vanila","other");
// #{변수명/숫자} 인터폴레이션기법으로 내용을 담을 수 있게 처리하는 
.coffee_#{nth($coffee,1)} { width:100%; }
.coffee_#{2} {width: 100%;}

// scss 반복문
// for(변수명 in 배열){}
// @for $i from 시작숫자 through 마지막숫자 {}

// 숫자 1부터 5까지 5번 반복수행하면서 해당 숫자는 매개변수 $key에 임의 할당
@for $key from 1 through length($coffee) {
  // .area_esspress{}  .area_latte{}  .area_choco{} ...의 형태로 .area_ 의 글자에
  // $coffee변수 내부에있는 이름을 각각 할당하기위해 보간법인 #{} 를 사용.
  // list형식을 사용하기 위해서는 nth(변수명, 순번)

  // $coffee: ("esspress","latte","choco","vanila","other");
  // $blue: (#00f, #0af, #0df, #7af, #adf);

  .area_#{ nth($coffee, $key) } {
    width:$key * 10%; height:100%;
    background-color: nth($blue, $key);
    margin:auto; padding:0; box-sizing:border-box;
  }
}

$device: 768;
#viewBox {
  width: 100%; height:600 / $device * 100vw;
}

/* ------------------------------------------------------------ */

// 변수 - $변수명 : 값
// 중첩 - #box{ >li{} }
// @mixin /  @include

@mixin blind(){
  display:block; width: 0; height: 0;
  position:absolute; z-index:-1; clip:rect(0 0 0 0); overflow: hidden;
}// @mixin blind();

@mixin bar(){
  &:after, &::after{
    content:""; display: block; clear: both;
  }
}// @mixin bar();

@mixin full(){
  display: block; width: 100%; height: 100%;
  & > span{ @include blind(); }
}// @mixin full();

@mixin MakeCard(){
  li{
    float:left; width:100%; height:200px;
    margin:10px; background-color: $yellow;
    > a { 
      @include full; 
      @content;
    }
  }
}// @mixin MakeCard();

.nav_area {
  width: 960px; height:auto;
  li {
    float:left; width: auto; height:30px;
  }
  a { @include full; background-color: $yellow; }
  // span { @include blind(); }
  @include bar();
}// .nav_area


.card {
  width: 100%; height: auto;
  @include MakeCard(){
    background-image: url("../../img/bar.png");
    background-repeat: no-repeat;
    background-position: 50% 50%;
    &>i{ @include full }
  };
  @include bar();
}

// list -  $var: (v1,v2,v3);           nth($var, 숫자)
// map  -  $map: (a:v1, b:v2, c:v3);   map-get($map, key);
// @for -  @for $i from startN through lastN {}
// #{}  -  숫자나,이름을 있는형태 그대로 사용할때 (주로 선택자)
// @mixin - 기능을 만들때, @include - 기능을 사용할때
// @content - @mixin 내부에서 기능을 추가할때 

@mixin mobile(){
  @media screen and (max-width:768px) {
    @content;
  }
}

#wrap {
  width: 100%; min-width:900px;
  background-color: $yellow;
  @include mobile{
    min-width: auto; background-color: #adf;
  }
}